---
apiVersion: v1
kind: Service
metadata:
  name: wordpress
  labels:
    app: wordpress
    tier: frontend
spec:
  ports:
    - nodePort: 30080
      port: 80
      protocol: TCP
  selector:
    app: wordpress
    tier: frontend
  type: NodePort
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: wp-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/wordpress"
  # persistentVolumeReclaimPolicy: Recycle
  persistentVolumeReclaimPolicy: Retain
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  labels:
    app: wordpress
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1   # versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wordpress
    tier: frontend
spec:
  selector:
    matchLabels:
      app: wordpress
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: wordpress
        tier: frontend
    spec:
      containers:
        # - image: wordpress:5.8.1-php7.4
        - image: wordpress:5.9.3-php7.4
          name: wordpress
          env:
            - name: WORDPRESS_DB_HOST
              value: wordpress-mysql
            - name: WORDPRESS_DB_NAME
              value: wordpress
            - name: WORDPRESS_DB_USER
              value: root
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-pass
                  key: password
            - name: WP_PROXY_HOST
              value: "proxy-dmz.intel.com"
            - name: WP_PROXY_PORT
              value: "911"
          ports:
            - containerPort: 80
              name: wordpress
          volumeMounts:
            - name: wordpress-persistent-storage
              mountPath: /var/www/html
          lifecycle:
            postStart:
              exec:
                command:
                  - "sh"
                  - "-c"
                  - >
                    while [ ! -f /var/www/html/wp-config.php ]; do
                      sleep 1s
                    done;
                    if ! grep -q -E WP_PROXY_HOST; then
                      echo 'define('"'"'WP_PROXY_HOST'"'"', getenv_docker('"'"'WP_PROXY_HOST'"'"','"'"'192.168.1.1'"'"') );' >> /var/www/html/wp-config.php
                    fi;
                    if ! grep -q -E WP_PROXY_PORT; then
                      echo 'define('"'"'WP_PROXY_PORT'"'"', getenv_docker('"'"'WP_PROXY_PORT'"'"','"'"'3128'"'"') );' >> /var/www/html/wp-config.php
                    fi;
                    if ! grep -q -E WP_PROXY_USERNAME; then
                      echo 'define('"'"'WP_PROXY_USERNAME'"'"', getenv_docker('"'"'WP_PROXY_USERNAME'"'"','"'"''"'"') );' >> /var/www/html/wp-config.php
                    fi;
                    if ! grep -q -E WP_PROXY_PASSWORD; then
                      echo 'define('"'"'WP_PROXY_PASSWORD'"'"', getenv_docker('"'"'WP_PROXY_PASSWORD'"'"','"'"''"'"') );' >> /var/www/html/wp-config.php
                    fi;
                    if ! grep -q -E WP_PROXY_BYPASS_HOSTS; then
                      echo 'define('"'"'WP_PROXY_BYPASS_HOSTS'"'"', getenv_docker('"'"'WP_PROXY_BYPASS_HOSTS'"'"','"'"'localhost'"'"') );' >> /var/www/html/wp-config.php
                    fi;
                    if ! grep -q -E FS_METHOD; then
                      echo 'define('"'"'FS_METHOD'"'"', getenv_docker('"'"'FS_METHOD'"'"','"'"'direct'"'"') );' >> /var/www/html/wp-config.php
                    fi;
      volumes:
        - name: wordpress-persistent-storage
          persistentVolumeClaim:
            claimName: wp-pv-claim
